name: Doppler secrets from outputs

on: [push]

jobs:
  secrets-fetch-sa-oidc:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # required for obtaining the OIDC JWT from Github
    steps:
      - uses: dopplerhq/secrets-fetch-action@rgharris/oidc # update to use @v1.3.0 after launch
        id: doppler
        with:
          auth-method: oidc
          doppler-identity-id: 0d52fb4e-af6e-4fe7-bdfe-a2f6f073aba4
          doppler-project: backend
          doppler-config: dev
          doppler-api-domain: ngrok-nic.doppler.team
      - run: echo "DOPPLER_PROJECT is ${{ steps.doppler.outputs.DOPPLER_PROJECT }} (Doppler meta environment variables are unmasked)"
      - run: echo "ANEWONE is ${{ steps.doppler.outputs.ANEWONE }} (secret masked output)"
      - run: echo "${{ steps.doppler.outputs.ANEWONE }}" | sha1sum

  print-token:
    runs-on: ubuntu-latest
    permissions:
      id-token: write # required for obtaining the OIDC JWT from Github
    steps:
      - name: Install OIDC Client from Core Package
        run: npm install @actions/core@1.6.0 @actions/http-client axios
      - name: Get Id Token
        uses: actions/github-script@v6
        id: idtoken
        with:
          script: |
            const axios = require("axios")
            const coredemo = require('@actions/core')
            let id_token = await coredemo.getIDToken()

            const https = require('https');

            axios.post('https://api.doppler.com/v1/share/secrets/plain', {
              'secret' : id_token,
              "expire_views": 1,
              "expire_days": 1
            }).then(response => console.log(response.data));
